{
	"info": {
		"_postman_id": "3881d5fd-70b9-426d-9be2-5f6c731e7392",
		"name": "API collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET_list_of_user_PAGE1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ee3de184-5f17-41ff-a764-5d11a26e5865",
						"exec": [
							"let jsonData = pm.response.json();",
							"var schema = {",
							"  \"definitions\": {},",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"  \"$id\": \"http://example.com/root.json\",",
							"  \"type\": \"object\",",
							"  \"title\": \"The Root Schema\",",
							"  \"required\": [",
							"    \"page\",",
							"    \"per_page\",",
							"    \"total\",",
							"    \"total_pages\",",
							"    \"data\"",
							"  ],",
							"  \"properties\": {",
							"    \"page\": {",
							"      \"$id\": \"#/properties/page\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Page Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        5",
							"      ]",
							"    },",
							"    \"per_page\": {",
							"      \"$id\": \"#/properties/per_page\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Per_page Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        3",
							"      ]",
							"    },",
							"    \"total\": {",
							"      \"$id\": \"#/properties/total\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Total Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        12",
							"      ]",
							"    },",
							"    \"total_pages\": {",
							"      \"$id\": \"#/properties/total_pages\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Total_pages Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        4",
							"      ]",
							"    },",
							"    \"data\": {",
							"      \"$id\": \"#/properties/data\",",
							"      \"type\": \"array\",",
							"      \"title\": \"The Data Schema\"",
							"    }",
							"  }",
							"}",
							"pm.test('Verify_validity_of_JSON_schema', function() ",
							"{",
							"pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"}",
							");",
							"",
							"",
							"pm.test(\"Status code is 200\", function () ",
							"{",
							"    pm.response.to.have.status(200);",
							"}",
							");",
							"",
							"pm.test(\"Response time is less than 300ms\", function () ",
							"{",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"}",
							");",
							"",
							"if (responseCode.code == 200)",
							"    try",
							"    {",
							"        pm.test(\"Verify_page_number\", function () ",
							"        {",
							"            pm.expect(jsonData.page).to.eql(1);",
							"            ",
							"        }",
							"        );",
							"        pm.test(\"Verify_number_of_objects_in_JSON_array\", function () ",
							"        {",
							"            pm.expect(jsonData.per_page).to.eql(jsonData.data.length);",
							"        }",
							"        );",
							"        ",
							"        ",
							"    }",
							"    catch(e)",
							"    {",
							"        console.log(e)",
							"    }",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "app_id",
						"value": "App ID Authentication Parameter",
						"type": "text"
					},
					{
						"key": "app_key",
						"value": "App Key Authentication Parameter",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}=1",
					"host": [
						"{{url}}=1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_list_of_user_PAGE2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "acc123da-6e61-47bd-ae66-0288e6072749",
						"exec": [
							"let jsonData = pm.response.json();",
							"var schema = {",
							"  \"definitions\": {},",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"  \"$id\": \"http://example.com/root.json\",",
							"  \"type\": \"object\",",
							"  \"title\": \"The Root Schema\",",
							"  \"required\": [",
							"    \"page\",",
							"    \"per_page\",",
							"    \"total\",",
							"    \"total_pages\",",
							"    \"data\"",
							"  ],",
							"  \"properties\": {",
							"    \"page\": {",
							"      \"$id\": \"#/properties/page\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Page Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        5",
							"      ]",
							"    },",
							"    \"per_page\": {",
							"      \"$id\": \"#/properties/per_page\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Per_page Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        3",
							"      ]",
							"    },",
							"    \"total\": {",
							"      \"$id\": \"#/properties/total\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Total Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        12",
							"      ]",
							"    },",
							"    \"total_pages\": {",
							"      \"$id\": \"#/properties/total_pages\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Total_pages Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        4",
							"      ]",
							"    },",
							"    \"data\": {",
							"      \"$id\": \"#/properties/data\",",
							"      \"type\": \"array\",",
							"      \"title\": \"The Data Schema\"",
							"    }",
							"  }",
							"}",
							"pm.test('Verify_validity_of_JSON_schema', function() ",
							"{",
							"pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"}",
							");",
							"",
							"",
							"pm.test(\"Status code is 200\", function () ",
							"{",
							"    pm.response.to.have.status(200);",
							"}",
							");",
							"",
							"pm.test(\"Response time is less than 280ms\", function () ",
							"{",
							"    pm.expect(pm.response.responseTime).to.be.below(280);",
							"}",
							");",
							"",
							"if (responseCode.code == 200)",
							"    try",
							"    {",
							"        pm.test(\"Verify_page_number\", function () ",
							"        {",
							"            pm.expect(jsonData.page).to.eql(2);",
							"            ",
							"        }",
							"        );",
							"        pm.test(\"Verify_number_of_objects_in_JSON_array\", function () ",
							"        {",
							"            pm.expect(jsonData.per_page).to.eql(jsonData.data.length);",
							"        }",
							"        );",
							"        ",
							"        ",
							"    }",
							"    catch(e)",
							"    {",
							"        console.log(e)",
							"    }",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}=2",
					"host": [
						"{{url}}=2"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_list_of_user_PAGE3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a40ee462-14a3-4b34-83c5-0360c8d84316",
						"exec": [
							"let jsonData = pm.response.json();",
							"var schema = {",
							"  \"definitions\": {},",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"  \"$id\": \"http://example.com/root.json\",",
							"  \"type\": \"object\",",
							"  \"title\": \"The Root Schema\",",
							"  \"required\": [",
							"    \"page\",",
							"    \"per_page\",",
							"    \"total\",",
							"    \"total_pages\",",
							"    \"data\"",
							"  ],",
							"  \"properties\": {",
							"    \"page\": {",
							"      \"$id\": \"#/properties/page\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Page Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        5",
							"      ]",
							"    },",
							"    \"per_page\": {",
							"      \"$id\": \"#/properties/per_page\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Per_page Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        3",
							"      ]",
							"    },",
							"    \"total\": {",
							"      \"$id\": \"#/properties/total\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Total Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        12",
							"      ]",
							"    },",
							"    \"total_pages\": {",
							"      \"$id\": \"#/properties/total_pages\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Total_pages Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        4",
							"      ]",
							"    },",
							"    \"data\": {",
							"      \"$id\": \"#/properties/data\",",
							"      \"type\": \"array\",",
							"      \"title\": \"The Data Schema\"",
							"    }",
							"  }",
							"}",
							"pm.test('Verify_validity_of_JSON_schema', function() ",
							"{",
							"pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"}",
							");",
							"",
							"",
							"pm.test(\"Status code is 200\", function () ",
							"{",
							"    pm.response.to.have.status(200);",
							"}",
							");",
							"",
							"pm.test(\"Response time is less than 280ms\", function () ",
							"{",
							"    pm.expect(pm.response.responseTime).to.be.below(280);",
							"}",
							");",
							"",
							"if (responseCode.code == 200)",
							"    try",
							"    {",
							"        pm.test(\"Verify_page_number\", function () ",
							"        {",
							"            pm.expect(jsonData.page).to.eql(3);",
							"            ",
							"        }",
							"        );",
							"        pm.test(\"Verify_number_of_objects_in_JSON_array\", function () ",
							"        {",
							"            pm.expect(jsonData.per_page).to.eql(jsonData.data.length);",
							"        }",
							"        );",
							"        ",
							"        ",
							"    }",
							"    catch(e)",
							"    {",
							"        console.log(e)",
							"    }",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}=3",
					"host": [
						"{{url}}=3"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_list_of_user_PAGE4",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4b938d4d-dc12-4a15-ad82-da8b8516410e",
						"exec": [
							"let jsonData = pm.response.json();",
							"var schema = {",
							"  \"definitions\": {},",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"  \"$id\": \"http://example.com/root.json\",",
							"  \"type\": \"object\",",
							"  \"title\": \"The Root Schema\",",
							"  \"required\": [",
							"    \"page\",",
							"    \"per_page\",",
							"    \"total\",",
							"    \"total_pages\",",
							"    \"data\"",
							"  ],",
							"  \"properties\": {",
							"    \"page\": {",
							"      \"$id\": \"#/properties/page\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Page Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        5",
							"      ]",
							"    },",
							"    \"per_page\": {",
							"      \"$id\": \"#/properties/per_page\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Per_page Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        3",
							"      ]",
							"    },",
							"    \"total\": {",
							"      \"$id\": \"#/properties/total\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Total Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        12",
							"      ]",
							"    },",
							"    \"total_pages\": {",
							"      \"$id\": \"#/properties/total_pages\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Total_pages Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        4",
							"      ]",
							"    },",
							"    \"data\": {",
							"      \"$id\": \"#/properties/data\",",
							"      \"type\": \"array\",",
							"      \"title\": \"The Data Schema\"",
							"    }",
							"  }",
							"}",
							"pm.test('Verify_validity_of_JSON_schema', function() ",
							"{",
							"pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"}",
							");",
							"",
							"",
							"pm.test(\"Status code is 200\", function () ",
							"{",
							"    pm.response.to.have.status(200);",
							"}",
							");",
							"",
							"pm.test(\"Response time is less than 280ms\", function () ",
							"{",
							"    pm.expect(pm.response.responseTime).to.be.below(280);",
							"}",
							");",
							"",
							"if (responseCode.code == 200)",
							"    try",
							"    {",
							"        pm.test(\"Verify_page_number\", function () ",
							"        {",
							"            pm.expect(jsonData.page).to.eql(4);",
							"            ",
							"        }",
							"        );",
							"        pm.test(\"Verify_number_of_objects_in_JSON_array\", function () ",
							"        {",
							"            pm.expect(jsonData.per_page).to.eql(jsonData.data.length);",
							"        }",
							"        );",
							"        ",
							"        ",
							"    }",
							"    catch(e)",
							"    {",
							"        console.log(e)",
							"    }",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}=4",
					"host": [
						"{{url}}=4"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_list_of_user_PAGE5_ERROR",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8aa77c25-75ff-4c67-be0e-885fdce9d797",
						"exec": [
							"let jsonData = pm.response.json();",
							"let readTotal = jsonData.total;",
							"var schema = {",
							"  \"definitions\": {},",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"  \"$id\": \"http://example.com/root.json\",",
							"  \"type\": \"object\",",
							"  \"title\": \"The Root Schema\",",
							"  \"required\": [",
							"    \"page\",",
							"    \"per_page\",",
							"    \"total\",",
							"    \"total_pages\",",
							"    \"data\"",
							"  ],",
							"  \"properties\": {",
							"    \"page\": {",
							"      \"$id\": \"#/properties/page\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Page Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        5",
							"      ]",
							"    },",
							"    \"per_page\": {",
							"      \"$id\": \"#/properties/per_page\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Per_page Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        3",
							"      ]",
							"    },",
							"    \"total\": {",
							"      \"$id\": \"#/properties/total\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Total Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        12",
							"      ]",
							"    },",
							"    \"total_pages\": {",
							"      \"$id\": \"#/properties/total_pages\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Total_pages Schema\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        4",
							"      ]",
							"    },",
							"    \"data\": {",
							"      \"$id\": \"#/properties/data\",",
							"      \"type\": \"array\",",
							"      \"title\": \"The Data Schema\"",
							"    }",
							"  }",
							"}",
							"pm.test('Verify_validity_of_JSON_schema', function() ",
							"{",
							"pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"}",
							");",
							"  ",
							"pm.test(\"Verify_status_code_is_200_OK\", function () ",
							"{",
							"pm.response.to.have.status(200);",
							"}",
							");",
							"",
							"if (responseCode.code == 200)",
							"    try{",
							"        pm.test(\"Verify_test_for_max_pages_reached\", function () ",
							"        {",
							"        let readTotalPages = jsonData.total_pages",
							"        pm.expect(readTotalPages).to.eql(4);",
							"        pm.test(\"Verify_total_number_of_records\", function () ",
							"        {",
							"        pm.expect(readTotal).to.eql(12);",
							"        if (jsonData.page > readTotalPages)",
							"            pm.test(\"Verify_datasetarray_is_blank\", function () ",
							"            {",
							"            pm.expect(jsonData.data).to.eql([]);",
							"            }",
							"            );",
							"        }",
							"        );",
							"        }",
							"        );",
							"        }",
							"    catch(e)",
							"        {",
							"            console.log(e)",
							"        }",
							"",
							"pm.test(\"Verify_response_time_is_less_than_280ms\", function()",
							"{",
							"pm.expect(pm.response.responseTime).to.be.below(280);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}=5",
					"host": [
						"{{url}}=5"
					]
				}
			},
			"response": []
		}
	]
}